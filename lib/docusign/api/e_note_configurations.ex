# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule DocuSign.Api.ENoteConfigurations do
  @moduledoc """
  API calls for all endpoints tagged `ENoteConfigurations`.
  """

  alias DocuSign.Connection
  import DocuSign.RequestBuilder

  @doc """
  Deletes configuration information for the eNote eOriginal integration.


  ## Parameters

  - connection (DocuSign.Connection): Connection to server
  - account_id (String.t): The external account number (int) or account ID GUID.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec e_note_configuration_delete_e_note_configuration(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) :: {:ok, nil} | {:error, Tesla.Env.t()}
  def e_note_configuration_delete_e_note_configuration(connection, account_id, _opts \\ []) do
    %{}
    |> method(:delete)
    |> url("/v2.1/accounts/#{account_id}/settings/enote_configuration")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Returns the configuration information for the eNote eOriginal integration.


  ## Parameters

  - connection (DocuSign.Connection): Connection to server
  - account_id (String.t): The external account number (int) or account ID GUID.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %DocuSign.Model.ENoteConfiguration{}} on success
  {:error, info} on failure
  """
  @spec e_note_configuration_get_e_note_configuration(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, DocuSign.Model.ENoteConfiguration.t()} | {:error, Tesla.Env.t()}
  def e_note_configuration_get_e_note_configuration(connection, account_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/v2.1/accounts/#{account_id}/settings/enote_configuration")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%DocuSign.Model.ENoteConfiguration{})
  end

  @doc """
  Updates configuration information for the eNote eOriginal integration.


  ## Parameters

  - connection (DocuSign.Connection): Connection to server
  - account_id (String.t): The external account number (int) or account ID GUID.
  - opts (KeywordList): [optional] Optional parameters
    - :e_note_configuration (ENoteConfiguration):

  ## Returns

  {:ok, %DocuSign.Model.ENoteConfiguration{}} on success
  {:error, info} on failure
  """
  @spec e_note_configuration_put_e_note_configuration(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, DocuSign.Model.ENoteConfiguration.t()} | {:error, Tesla.Env.t()}
  def e_note_configuration_put_e_note_configuration(connection, account_id, opts \\ []) do
    optional_params = %{
      :eNoteConfiguration => :body
    }

    %{}
    |> method(:put)
    |> url("/v2.1/accounts/#{account_id}/settings/enote_configuration")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%DocuSign.Model.ENoteConfiguration{})
  end
end
