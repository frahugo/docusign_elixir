# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule DocuSign.Api.EnvelopeDocumentTabs do
  @moduledoc """
  API calls for all endpoints tagged `EnvelopeDocumentTabs`.
  """

  alias DocuSign.Connection
  import DocuSign.RequestBuilder

  @doc """
  Deletes tabs from an envelope document.


  ## Parameters

  - connection (DocuSign.Connection): Connection to server
  - account_id (String.t): The external account number (int) or account ID GUID.
  - document_id (String.t): The &#x60;documentId&#x60; is set by the API client. It is an integer that falls between &#x60;1&#x60; and 2,147,483,647. The value is encoded as a string without commas. The values &#x60;1&#x60;, &#x60;2&#x60;, &#x60;3&#x60;, and so on are typically used to identify the first few documents in an envelope. Tab definitions include a &#x60;documentId&#x60; property that specifies the document on which to place the tab.
  - envelope_id (String.t): The envelope&#39;s GUID.   Example: &#x60;93be49ab-xxxx-xxxx-xxxx-f752070d71ec&#x60;
  - opts (KeywordList): [optional] Optional parameters
    - :tabs (Tabs): A list of tabs, which are represented graphically as symbols on documents at the time of signing. Tabs show recipients where to sign, initial, or enter data. They may also display data to the recipients.

  ## Returns

  {:ok, %DocuSign.Model.Tabs{}} on success
  {:error, info} on failure
  """
  @spec tabs_delete_document_tabs(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, DocuSign.Model.Tabs.t()} | {:error, Tesla.Env.t()}
  def tabs_delete_document_tabs(connection, account_id, document_id, envelope_id, opts \\ []) do
    optional_params = %{
      :tabs => :body
    }

    %{}
    |> method(:delete)
    |> url("/v2.1/accounts/#{account_id}/envelopes/#{envelope_id}/documents/#{document_id}/tabs")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%DocuSign.Model.Tabs{})
  end

  @doc """
  Returns the tabs on a document.
  This method returns the tabs associated with a document.

  ## Parameters

  - connection (DocuSign.Connection): Connection to server
  - account_id (String.t): The external account number (int) or account ID GUID.
  - document_id (String.t): The &#x60;documentId&#x60; is set by the API client. It is an integer that falls between &#x60;1&#x60; and 2,147,483,647. The value is encoded as a string without commas. The values &#x60;1&#x60;, &#x60;2&#x60;, &#x60;3&#x60;, and so on are typically used to identify the first few documents in an envelope. Tab definitions include a &#x60;documentId&#x60; property that specifies the document on which to place the tab.
  - envelope_id (String.t): The envelope&#39;s GUID.   Example: &#x60;93be49ab-xxxx-xxxx-xxxx-f752070d71ec&#x60;
  - opts (KeywordList): [optional] Optional parameters
    - :include_metadata (String.t): When set to **true**, the response includes metadata indicating which properties are editable.
    - :page_numbers (String.t): Filters for tabs that occur on the pages that you specify. Enter as a comma-separated list of page GUIDs.  Example: &#x60;page_numbers&#x3D;2,6&#x60;  Note: You can only enter individual page numbers, and not a page range.

  ## Returns

  {:ok, %DocuSign.Model.EnvelopeDocumentTabs{}} on success
  {:error, info} on failure
  """
  @spec tabs_get_document_tabs(Tesla.Env.client(), String.t(), String.t(), String.t(), keyword()) ::
          {:ok, DocuSign.Model.EnvelopeDocumentTabs.t()} | {:error, Tesla.Env.t()}
  def tabs_get_document_tabs(connection, account_id, document_id, envelope_id, opts \\ []) do
    optional_params = %{
      :include_metadata => :query,
      :page_numbers => :query
    }

    %{}
    |> method(:get)
    |> url("/v2.1/accounts/#{account_id}/envelopes/#{envelope_id}/documents/#{document_id}/tabs")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%DocuSign.Model.EnvelopeDocumentTabs{})
  end

  @doc """
  Returns tabs on the specified page.


  ## Parameters

  - connection (DocuSign.Connection): Connection to server
  - account_id (String.t): The external account number (int) or account ID GUID.
  - document_id (String.t): The &#x60;documentId&#x60; is set by the API client. It is an integer that falls between &#x60;1&#x60; and 2,147,483,647. The value is encoded as a string without commas. The values &#x60;1&#x60;, &#x60;2&#x60;, &#x60;3&#x60;, and so on are typically used to identify the first few documents in an envelope. Tab definitions include a &#x60;documentId&#x60; property that specifies the document on which to place the tab.
  - envelope_id (String.t): The envelope&#39;s GUID.   Example: &#x60;93be49ab-xxxx-xxxx-xxxx-f752070d71ec&#x60;
  - page_number (String.t): The page number being accessed.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %DocuSign.Model.EnvelopeDocumentTabs{}} on success
  {:error, info} on failure
  """
  @spec tabs_get_page_tabs(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, DocuSign.Model.EnvelopeDocumentTabs.t()} | {:error, Tesla.Env.t()}
  def tabs_get_page_tabs(
        connection,
        account_id,
        document_id,
        envelope_id,
        page_number,
        _opts \\ []
      ) do
    %{}
    |> method(:get)
    |> url(
      "/v2.1/accounts/#{account_id}/envelopes/#{envelope_id}/documents/#{document_id}/pages/#{
        page_number
      }/tabs"
    )
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%DocuSign.Model.EnvelopeDocumentTabs{})
  end

  @doc """
  Adds the tabs to an envelope document.


  ## Parameters

  - connection (DocuSign.Connection): Connection to server
  - account_id (String.t): The external account number (int) or account ID GUID.
  - document_id (String.t): The &#x60;documentId&#x60; is set by the API client. It is an integer that falls between &#x60;1&#x60; and 2,147,483,647. The value is encoded as a string without commas. The values &#x60;1&#x60;, &#x60;2&#x60;, &#x60;3&#x60;, and so on are typically used to identify the first few documents in an envelope. Tab definitions include a &#x60;documentId&#x60; property that specifies the document on which to place the tab.
  - envelope_id (String.t): The envelope&#39;s GUID.   Example: &#x60;93be49ab-xxxx-xxxx-xxxx-f752070d71ec&#x60;
  - opts (KeywordList): [optional] Optional parameters
    - :tabs (Tabs): A list of tabs, which are represented graphically as symbols on documents at the time of signing. Tabs show recipients where to sign, initial, or enter data. They may also display data to the recipients.

  ## Returns

  {:ok, %DocuSign.Model.Tabs{}} on success
  {:error, info} on failure
  """
  @spec tabs_post_document_tabs(Tesla.Env.client(), String.t(), String.t(), String.t(), keyword()) ::
          {:ok, DocuSign.Model.Tabs.t()} | {:error, Tesla.Env.t()}
  def tabs_post_document_tabs(connection, account_id, document_id, envelope_id, opts \\ []) do
    optional_params = %{
      :tabs => :body
    }

    %{}
    |> method(:post)
    |> url("/v2.1/accounts/#{account_id}/envelopes/#{envelope_id}/documents/#{document_id}/tabs")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%DocuSign.Model.Tabs{})
  end

  @doc """
  Updates the tabs for an envelope document.


  ## Parameters

  - connection (DocuSign.Connection): Connection to server
  - account_id (String.t): The external account number (int) or account ID GUID.
  - document_id (String.t): The &#x60;documentId&#x60; is set by the API client. It is an integer that falls between &#x60;1&#x60; and 2,147,483,647. The value is encoded as a string without commas. The values &#x60;1&#x60;, &#x60;2&#x60;, &#x60;3&#x60;, and so on are typically used to identify the first few documents in an envelope. Tab definitions include a &#x60;documentId&#x60; property that specifies the document on which to place the tab.
  - envelope_id (String.t): The envelope&#39;s GUID.   Example: &#x60;93be49ab-xxxx-xxxx-xxxx-f752070d71ec&#x60;
  - opts (KeywordList): [optional] Optional parameters
    - :tabs (Tabs): A list of tabs, which are represented graphically as symbols on documents at the time of signing. Tabs show recipients where to sign, initial, or enter data. They may also display data to the recipients.

  ## Returns

  {:ok, %DocuSign.Model.Tabs{}} on success
  {:error, info} on failure
  """
  @spec tabs_put_document_tabs(Tesla.Env.client(), String.t(), String.t(), String.t(), keyword()) ::
          {:ok, DocuSign.Model.Tabs.t()} | {:error, Tesla.Env.t()}
  def tabs_put_document_tabs(connection, account_id, document_id, envelope_id, opts \\ []) do
    optional_params = %{
      :tabs => :body
    }

    %{}
    |> method(:put)
    |> url("/v2.1/accounts/#{account_id}/envelopes/#{envelope_id}/documents/#{document_id}/tabs")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%DocuSign.Model.Tabs{})
  end
end
