# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule DocuSign.Api.TemplateDocumentFields do
  @moduledoc """
  API calls for all endpoints tagged `TemplateDocumentFields`.
  """

  alias DocuSign.Connection
  import DocuSign.RequestBuilder

  @doc """
  Deletes custom document fields from an existing template document.
  Deletes custom document fields from an existing template document.

  ## Parameters

  - connection (DocuSign.Connection): Connection to server
  - account_id (String.t): The external account number (int) or account ID GUID.
  - document_id (String.t): The &#x60;documentId&#x60; is set by the API client. It is an integer that falls between &#x60;1&#x60; and 2,147,483,647. The value is encoded as a string without commas. The values &#x60;1&#x60;, &#x60;2&#x60;, &#x60;3&#x60;, and so on are typically used to identify the first few documents in an envelope. Tab definitions include a &#x60;documentId&#x60; property that specifies the document on which to place the tab.
  - template_id (String.t): The id of the template.
  - opts (KeywordList): [optional] Optional parameters
    - :document_fields_information (DocumentFieldsInformation):

  ## Returns

  {:ok, %DocuSign.Model.DocumentFieldsInformation{}} on success
  {:error, info} on failure
  """
  @spec document_fields_delete_template_document_fields(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, DocuSign.Model.DocumentFieldsInformation.t()} | {:error, Tesla.Env.t()}
  def document_fields_delete_template_document_fields(
        connection,
        account_id,
        document_id,
        template_id,
        opts \\ []
      ) do
    optional_params = %{
      :documentFieldsInformation => :body
    }

    %{}
    |> method(:delete)
    |> url(
      "/v2.1/accounts/#{account_id}/templates/#{template_id}/documents/#{document_id}/fields"
    )
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%DocuSign.Model.DocumentFieldsInformation{})
  end

  @doc """
  Gets the custom document fields for a an existing template document.
  This method retrieves the custom document fields for an existing template document.

  ## Parameters

  - connection (DocuSign.Connection): Connection to server
  - account_id (String.t): The external account number (int) or account ID GUID.
  - document_id (String.t): The &#x60;documentId&#x60; is set by the API client. It is an integer that falls between &#x60;1&#x60; and 2,147,483,647. The value is encoded as a string without commas. The values &#x60;1&#x60;, &#x60;2&#x60;, &#x60;3&#x60;, and so on are typically used to identify the first few documents in an envelope. Tab definitions include a &#x60;documentId&#x60; property that specifies the document on which to place the tab.
  - template_id (String.t): The id of the template.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %DocuSign.Model.DocumentFieldsInformation{}} on success
  {:error, info} on failure
  """
  @spec document_fields_get_template_document_fields(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, DocuSign.Model.DocumentFieldsInformation.t()} | {:error, Tesla.Env.t()}
  def document_fields_get_template_document_fields(
        connection,
        account_id,
        document_id,
        template_id,
        _opts \\ []
      ) do
    %{}
    |> method(:get)
    |> url(
      "/v2.1/accounts/#{account_id}/templates/#{template_id}/documents/#{document_id}/fields"
    )
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%DocuSign.Model.DocumentFieldsInformation{})
  end

  @doc """
  Creates custom document fields in an existing template document.
  Creates custom document fields in an existing template document.

  ## Parameters

  - connection (DocuSign.Connection): Connection to server
  - account_id (String.t): The external account number (int) or account ID GUID.
  - document_id (String.t): The &#x60;documentId&#x60; is set by the API client. It is an integer that falls between &#x60;1&#x60; and 2,147,483,647. The value is encoded as a string without commas. The values &#x60;1&#x60;, &#x60;2&#x60;, &#x60;3&#x60;, and so on are typically used to identify the first few documents in an envelope. Tab definitions include a &#x60;documentId&#x60; property that specifies the document on which to place the tab.
  - template_id (String.t): The id of the template.
  - opts (KeywordList): [optional] Optional parameters
    - :document_fields_information (DocumentFieldsInformation):

  ## Returns

  {:ok, %DocuSign.Model.DocumentFieldsInformation{}} on success
  {:error, info} on failure
  """
  @spec document_fields_post_template_document_fields(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, DocuSign.Model.DocumentFieldsInformation.t()} | {:error, Tesla.Env.t()}
  def document_fields_post_template_document_fields(
        connection,
        account_id,
        document_id,
        template_id,
        opts \\ []
      ) do
    optional_params = %{
      :documentFieldsInformation => :body
    }

    %{}
    |> method(:post)
    |> url(
      "/v2.1/accounts/#{account_id}/templates/#{template_id}/documents/#{document_id}/fields"
    )
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%DocuSign.Model.DocumentFieldsInformation{})
  end

  @doc """
  Updates existing custom document fields in an existing template document.
  Updates existing custom document fields in an existing template document.

  ## Parameters

  - connection (DocuSign.Connection): Connection to server
  - account_id (String.t): The external account number (int) or account ID GUID.
  - document_id (String.t): The &#x60;documentId&#x60; is set by the API client. It is an integer that falls between &#x60;1&#x60; and 2,147,483,647. The value is encoded as a string without commas. The values &#x60;1&#x60;, &#x60;2&#x60;, &#x60;3&#x60;, and so on are typically used to identify the first few documents in an envelope. Tab definitions include a &#x60;documentId&#x60; property that specifies the document on which to place the tab.
  - template_id (String.t): The id of the template.
  - opts (KeywordList): [optional] Optional parameters
    - :document_fields_information (DocumentFieldsInformation):

  ## Returns

  {:ok, %DocuSign.Model.DocumentFieldsInformation{}} on success
  {:error, info} on failure
  """
  @spec document_fields_put_template_document_fields(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) :: {:ok, DocuSign.Model.DocumentFieldsInformation.t()} | {:error, Tesla.Env.t()}
  def document_fields_put_template_document_fields(
        connection,
        account_id,
        document_id,
        template_id,
        opts \\ []
      ) do
    optional_params = %{
      :documentFieldsInformation => :body
    }

    %{}
    |> method(:put)
    |> url(
      "/v2.1/accounts/#{account_id}/templates/#{template_id}/documents/#{document_id}/fields"
    )
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%DocuSign.Model.DocumentFieldsInformation{})
  end
end
