# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule DocuSign.Api.TemplateDocumentHtmlDefinitions do
  @moduledoc """
  API calls for all endpoints tagged `TemplateDocumentHtmlDefinitions`.
  """

  alias DocuSign.Connection
  import DocuSign.RequestBuilder

  @doc """
  Gets the Original HTML Definition used to generate the Responsive HTML for a given document in a template.


  ## Parameters

  - connection (DocuSign.Connection): Connection to server
  - account_id (String.t): The external account number (int) or account ID GUID.
  - document_id (String.t): The &#x60;documentId&#x60; is set by the API client. It is an integer that falls between &#x60;1&#x60; and 2,147,483,647. The value is encoded as a string without commas. The values &#x60;1&#x60;, &#x60;2&#x60;, &#x60;3&#x60;, and so on are typically used to identify the first few documents in an envelope. Tab definitions include a &#x60;documentId&#x60; property that specifies the document on which to place the tab.
  - template_id (String.t): The id of the template.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %DocuSign.Model.DocumentHtmlDefinitionOriginals{}} on success
  {:error, info} on failure
  """
  @spec responsive_html_get_template_document_html_definitions(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, DocuSign.Model.DocumentHtmlDefinitionOriginals.t()}
          | {:error, Tesla.Env.t()}
  def responsive_html_get_template_document_html_definitions(
        connection,
        account_id,
        document_id,
        template_id,
        _opts \\ []
      ) do
    %{}
    |> method(:get)
    |> url(
      "/v2.1/accounts/#{account_id}/templates/#{template_id}/documents/#{document_id}/html_definitions"
    )
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%DocuSign.Model.DocumentHtmlDefinitionOriginals{})
  end
end
