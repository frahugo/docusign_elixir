# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule DocuSign.Model.AccountSignature do
  @moduledoc """

  """

  @derive [Poison.Encoder]
  defstruct [
    :adoptedDateTime,
    :createdDateTime,
    :customField,
    :dateStampProperties,
    :disallowUserResizeStamp,
    :errorDetails,
    :externalID,
    :imageBase64,
    :imageType,
    :initials150ImageId,
    :initialsImageUri,
    :isDefault,
    :lastModifiedDateTime,
    :nrdsId,
    :nrdsLastName,
    :nrdsStatus,
    :phoneticName,
    :signature150ImageId,
    :signatureFont,
    :signatureGroups,
    :signatureId,
    :signatureImageUri,
    :signatureInitials,
    :signatureName,
    :signatureRights,
    :signatureType,
    :signatureUsers,
    :stampFormat,
    :stampImageUri,
    :stampSizeMM,
    :stampType,
    :status
  ]

  @type t :: %__MODULE__{
          :adoptedDateTime => String.t(),
          :createdDateTime => String.t(),
          :customField => String.t(),
          :dateStampProperties => DateStampProperties,
          :disallowUserResizeStamp => String.t(),
          :errorDetails => ErrorDetails,
          :externalID => String.t(),
          :imageBase64 => String.t(),
          :imageType => String.t(),
          :initials150ImageId => String.t(),
          :initialsImageUri => String.t(),
          :isDefault => String.t(),
          :lastModifiedDateTime => String.t(),
          :nrdsId => String.t(),
          :nrdsLastName => String.t(),
          :nrdsStatus => String.t(),
          :phoneticName => String.t(),
          :signature150ImageId => String.t(),
          :signatureFont => String.t(),
          :signatureGroups => [SignatureGroup],
          :signatureId => String.t(),
          :signatureImageUri => String.t(),
          :signatureInitials => String.t(),
          :signatureName => String.t(),
          :signatureRights => String.t(),
          :signatureType => String.t(),
          :signatureUsers => [SignatureUser],
          :stampFormat => String.t(),
          :stampImageUri => String.t(),
          :stampSizeMM => String.t(),
          :stampType => String.t(),
          :status => String.t()
        }
end

defimpl Poison.Decoder, for: DocuSign.Model.AccountSignature do
  import DocuSign.Deserializer

  def decode(value, options) do
    value
    |> deserialize(
      :dateStampProperties,
      :struct,
      DocuSign.Model.DateStampProperties,
      options
    )
    |> deserialize(:errorDetails, :struct, DocuSign.Model.ErrorDetails, options)
    |> deserialize(:signatureGroups, :list, DocuSign.Model.SignatureGroup, options)
    |> deserialize(:signatureUsers, :list, DocuSign.Model.SignatureUser, options)
  end
end
