# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule DocuSign.Model.LocalePolicy do
  @moduledoc """

  """

  @derive [Poison.Encoder]
  defstruct [
    :addressFormat,
    :addressFormatMetadata,
    :allowRegion,
    :calendarType,
    :calendarTypeMetadata,
    :cultureName,
    :cultureNameMetadata,
    :currencyCode,
    :currencyCodeMetadata,
    :currencyNegativeFormat,
    :currencyNegativeFormatMetadata,
    :currencyPositiveFormat,
    :currencyPositiveFormatMetadata,
    :customDateFormat,
    :customSignDateFormat,
    :customSignTimeFormat,
    :customTimeFormat,
    :dateFormat,
    :dateFormatMetadata,
    :effectiveAddressFormat,
    :effectiveCalendarType,
    :effectiveCurrencyCode,
    :effectiveCurrencyNegativeFormat,
    :effectiveCurrencyPositiveFormat,
    :effectiveCustomDateFormat,
    :effectiveCustomTimeFormat,
    :effectiveDateFormat,
    :effectiveInitialFormat,
    :effectiveNameFormat,
    :effectiveTimeFormat,
    :effectiveTimeZone,
    :initialFormat,
    :initialFormatMetadata,
    :nameFormat,
    :nameFormatMetadata,
    :signDateFormat,
    :signDateFormatMetadata,
    :signTimeFormat,
    :signTimeFormatMetadata,
    :timeFormat,
    :timeFormatMetadata,
    :timeZone,
    :timeZoneMetadata
  ]

  @type t :: %__MODULE__{
          :addressFormat => String.t(),
          :addressFormatMetadata => SettingsMetadata,
          :allowRegion => String.t(),
          :calendarType => String.t(),
          :calendarTypeMetadata => SettingsMetadata,
          :cultureName => String.t(),
          :cultureNameMetadata => SettingsMetadata,
          :currencyCode => String.t(),
          :currencyCodeMetadata => SettingsMetadata,
          :currencyNegativeFormat => String.t(),
          :currencyNegativeFormatMetadata => SettingsMetadata,
          :currencyPositiveFormat => String.t(),
          :currencyPositiveFormatMetadata => SettingsMetadata,
          :customDateFormat => String.t(),
          :customSignDateFormat => String.t(),
          :customSignTimeFormat => String.t(),
          :customTimeFormat => String.t(),
          :dateFormat => String.t(),
          :dateFormatMetadata => SettingsMetadata,
          :effectiveAddressFormat => String.t(),
          :effectiveCalendarType => String.t(),
          :effectiveCurrencyCode => String.t(),
          :effectiveCurrencyNegativeFormat => String.t(),
          :effectiveCurrencyPositiveFormat => String.t(),
          :effectiveCustomDateFormat => String.t(),
          :effectiveCustomTimeFormat => String.t(),
          :effectiveDateFormat => String.t(),
          :effectiveInitialFormat => String.t(),
          :effectiveNameFormat => String.t(),
          :effectiveTimeFormat => String.t(),
          :effectiveTimeZone => String.t(),
          :initialFormat => String.t(),
          :initialFormatMetadata => SettingsMetadata,
          :nameFormat => String.t(),
          :nameFormatMetadata => SettingsMetadata,
          :signDateFormat => String.t(),
          :signDateFormatMetadata => SettingsMetadata,
          :signTimeFormat => String.t(),
          :signTimeFormatMetadata => SettingsMetadata,
          :timeFormat => String.t(),
          :timeFormatMetadata => SettingsMetadata,
          :timeZone => String.t(),
          :timeZoneMetadata => SettingsMetadata
        }
end

defimpl Poison.Decoder, for: DocuSign.Model.LocalePolicy do
  import DocuSign.Deserializer

  def decode(value, options) do
    value
    |> deserialize(
      :addressFormatMetadata,
      :struct,
      DocuSign.Model.SettingsMetadata,
      options
    )
    |> deserialize(
      :calendarTypeMetadata,
      :struct,
      DocuSign.Model.SettingsMetadata,
      options
    )
    |> deserialize(:cultureNameMetadata, :struct, DocuSign.Model.SettingsMetadata, options)
    |> deserialize(
      :currencyCodeMetadata,
      :struct,
      DocuSign.Model.SettingsMetadata,
      options
    )
    |> deserialize(
      :currencyNegativeFormatMetadata,
      :struct,
      DocuSign.Model.SettingsMetadata,
      options
    )
    |> deserialize(
      :currencyPositiveFormatMetadata,
      :struct,
      DocuSign.Model.SettingsMetadata,
      options
    )
    |> deserialize(:dateFormatMetadata, :struct, DocuSign.Model.SettingsMetadata, options)
    |> deserialize(
      :initialFormatMetadata,
      :struct,
      DocuSign.Model.SettingsMetadata,
      options
    )
    |> deserialize(:nameFormatMetadata, :struct, DocuSign.Model.SettingsMetadata, options)
    |> deserialize(
      :signDateFormatMetadata,
      :struct,
      DocuSign.Model.SettingsMetadata,
      options
    )
    |> deserialize(
      :signTimeFormatMetadata,
      :struct,
      DocuSign.Model.SettingsMetadata,
      options
    )
    |> deserialize(:timeFormatMetadata, :struct, DocuSign.Model.SettingsMetadata, options)
    |> deserialize(:timeZoneMetadata, :struct, DocuSign.Model.SettingsMetadata, options)
  end
end
