# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule DocuSign.Model.ReportInProductCsvRunRequest do
  @moduledoc """

  """

  @derive [Poison.Encoder]
  defstruct [
    :customFieldFilter,
    :dateRangeCustomFromDate,
    :dateRangeCustomToDate,
    :dateRangeFilter,
    :envelopeDateTypeFilter,
    :envelopeRecipientNameContainsFilter,
    :envelopeStatusFilter,
    :envelopeSubjectContainsFilter,
    :fields,
    :forDownload,
    :isDashboard,
    :newLine,
    :overrideTimezoneKey,
    :periodLengthFilter,
    :quote,
    :reportCustomizedId,
    :reportDescription,
    :reportId,
    :reportInvocationType,
    :reportName,
    :sentByFilter,
    :sentByIds,
    :separator,
    :sortDirection,
    :sortField,
    :startPosition
  ]

  @type t :: %__MODULE__{
          :customFieldFilter => String.t(),
          :dateRangeCustomFromDate => String.t(),
          :dateRangeCustomToDate => String.t(),
          :dateRangeFilter => String.t(),
          :envelopeDateTypeFilter => String.t(),
          :envelopeRecipientNameContainsFilter => String.t(),
          :envelopeStatusFilter => String.t(),
          :envelopeSubjectContainsFilter => String.t(),
          :fields => [ReportInProductField],
          :forDownload => String.t(),
          :isDashboard => String.t(),
          :newLine => String.t(),
          :overrideTimezoneKey => String.t(),
          :periodLengthFilter => String.t(),
          :quote => String.t(),
          :reportCustomizedId => String.t(),
          :reportDescription => String.t(),
          :reportId => String.t(),
          :reportInvocationType => String.t(),
          :reportName => String.t(),
          :sentByFilter => String.t(),
          :sentByIds => String.t(),
          :separator => String.t(),
          :sortDirection => String.t(),
          :sortField => String.t(),
          :startPosition => String.t()
        }
end

defimpl Poison.Decoder, for: DocuSign.Model.ReportInProductCsvRunRequest do
  import DocuSign.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:fields, :list, DocuSign.Model.ReportInProductField, options)
  end
end
